#!/usr/bin/env node

var fs     = require('fs'),
    path   = require('path'),
    argv   = require('minimist')(process.argv.slice(2)),
    mkdirp = require('mkdirp'),
    statiq = require('../lib/statiq');

function lookup() {
    var statiqjson = '';
    var statiqpath = process.cwd();
    while (!statiqjson && statiqpath != '/') {
        if (fs.existsSync(path.join(statiqpath, 'statiq.json'))) {
            statiqjson = require(path.join(statiqpath, 'statiq.json'));
            statiqjson.cwd = statiqjson.cwd ? path.join(statiqpath, statiqjson.cwd) : statiqpath;
        } else {
            statiqpath = path.dirname(statiqpath);
        }
    }
    return statiqjson;
}

function cli() {
    // No args, lookup for statiq.json and parse
    if (!argv._.length) {
        statiq(lookup());
    // Else check commands
    } else switch(argv._[0]) {
        case 'init':
            if (!argv.d || argv.a) {
                fs.writeFileSync(path.join(process.cwd(), 'statiq.json'), JSON.stringify({
                    defaultTemplate: 'index.html',
                    tplPath: 'templates',
                    srcPath: 'sources',
                    dstPath: 'dist',
                    globals: {
                        sitename: ''
                    }
                }, null, '    '));
                console.log('\u2713 File statiq.json created');
            }

            if (argv.d || argv.a) {
                var json = lookup();
                mkdirp(path.join(json.cwd, json.srcPath), function(err){
                    !err && console.log('\u2713 Sources directory created');
                });
                mkdirp(path.join(json.cwd, json.tplPath), function(err){
                    !err && console.log('\u2713 Templates directory created');
                });
                mkdirp(path.join(json.cwd, json.dstPath), function(err){
                    !err && console.log('\u2713 Dist directory created');
                });
            }
            break;
    }
}

cli();